{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","Response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","Cardlist","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAaeA,EAVF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACtB,OACI,sBAAKC,UAAY,yDAAjB,UACI,qBAAKC,IAAM,SAASC,IAAG,+BAA0BH,EAA1B,cACvB,6BAAKF,IACL,4BAAIC,QCgBDK,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACC,8BAEGA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACE,cAAC,EAAD,CAEIR,GAAMK,EAAOG,GAAGR,GAChBF,KAAOO,EAAOG,GAAGV,KACjBC,MAAOM,EAAOG,GAAGT,OAHXS,SCKPC,EAdG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC5B,OACE,qBAAKV,UAAY,MAAjB,SACE,uBACGA,UAAY,gCACZW,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCCRI,EARA,SAACC,GACZ,OAEI,qBAAKC,MAAS,CAAEC,UAAW,SAASC,OAAQ,MAAOC,OAAQ,SAA3D,SACKJ,EAAMK,YCgBJC,E,kDAlBX,WAAYN,GAAO,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACTC,UAAS,GAHK,E,qDAOrB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACG,OAAGG,KAAKJ,MAAMC,SACH,0DAEJG,KAAKX,MAAMK,a,GAhBMQ,aC+CZC,G,wDAvCd,aAAc,IAAD,8BACX,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAbzC,EAAKX,MAAQ,CACXlB,OAAQ,GACRK,YAAa,IAJJ,E,qDAQb,WAAqB,IAAD,OAClByB,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACvB,OAAQkC,S,oBAO1C,WACE,MAA6BZ,KAAKJ,MAA3BlB,EAAP,EAAOA,OAAOK,EAAd,EAAcA,YACR8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACnC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAEvD,OAAQtC,EAAOwC,OAGT,sBAAK5C,UAAY,KAAjB,UACE,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWU,aAAegB,KAAKI,iBAC/B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAACe,EAAD,CAAUzC,OAASmC,WAP3B,gD,GAzBYX,cCEHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ae1cfdc8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = ({name,email,id}) => {\r\n    return(\r\n        <div className = \" tc bg-light-green ma2 pa3 dib grow br3 shadow-5 bw-2 \">\r\n            <img alt = 'Robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default Card;\r\n\r\n\r\n\r\n// import React from 'react';\r\n\r\n// const Card = ({name,email,id})=>{\r\n//     return(\r\n//         <div className = 'tc bg-light-green dib ma2 br3 pa3 grow shadow-5 bw2' >\r\n//             <img src ={`https://robohash.org/${id}?200x200`} />\r\n//             <h2>{name}</h2>\r\n//             <p>{email}</p>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n// export default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n  return(\r\n   <div> \r\n     {\r\n      robots.map((user,i) =>{\r\n          return( \r\n            <Card \r\n                key ={i} \r\n                id = {robots[i].id} \r\n                name ={robots[i].name} \r\n                email={robots[i].email} \r\n            />\r\n          )\r\n        }) \r\n     }\r\n   </div> \r\n  );\r\n\r\n}\r\n\r\nexport default CardList;\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield,searchChange}) => {\r\n    return(\r\n      <div className = 'pa2'>  \r\n        <input \r\n           className = 'pa3 ba b--green bg-light-blue' \r\n           type = 'search' \r\n           placeholder = 'search robots'\r\n           onChange = {searchChange} \r\n        />\r\n      </div>  \r\n    );\r\n}\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n        \r\n        <div style = {{ overflowY: 'scroll',border: '3px', height: '735px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default Scroll;\r\n","\r\nimport React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n    super(props);    \r\n    this.state = {\r\n        hasError:false\r\n    }\r\n  } \r\n\r\n componentDidCatch(error,info){\r\n     this.setState({hasError: true})\r\n }\r\n\r\n render() {\r\n    if(this.state.hasError ){\r\n        return <h1>Oooops. That is not good</h1>\r\n    }\r\n    return this.props.children\r\n }\r\n}\r\nexport default ErrorBoundary;","import React,{Component} from 'react';\nimport Cardlist from '../components/Cardlist';\n// import { robots } from './robots';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\n\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(Response=> Response.json())\n      .then(users => this.setState({robots: users}));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value})   \n  }\n\n  render()  {\n    const {robots,searchfield} = this.state;\n    const filteredRobots = robots.filter(robot =>{\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    })\n    return !robots.length ?\n      <h1>Loading...</h1> :\n      (\n          <div className = 'tc' >\n            <h1 className = 'f1'>Robofriends</h1>\n            <SearchBox searchChange ={this.onSearchChange} />\n            <Scroll>\n             <ErrorBoundary>\n              <Cardlist robots ={filteredRobots} />\n             </ErrorBoundary>\n            </Scroll>\n          </div>\n      );   \n  }\n}\n\nexport  default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}